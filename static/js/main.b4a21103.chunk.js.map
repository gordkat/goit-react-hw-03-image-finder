{"version":3,"sources":["services/img-api.js","components/SearchBar/SearchBar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/Modal/Modal.js","App.js","index.js"],"names":["fetchImg","searchQuery","currentPage","perPage","axios","get","then","response","data","hits","length","Error","SearchBar","state","search","handleChange","event","setState","currentTarget","value","handleSubmit","preventDefault","props","onSubmit","this","className","type","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","image","onClick","src","smallImg","alt","tags","bigImg","ImageGallery","images","onModal","map","id","Button","modalRoot","document","querySelector","Modal","handleKeyDown","code","onClose","handleBackdropClick","target","window","addEventListener","removeEventListener","createPortal","imgModal","tagsModal","App","isLoading","error","showModal","srcImgModal","tagsImgModal","onChangeQuery","query","fetchImages","options","imgApi","newImages","img","webformatURL","largeImageURL","prevState","catch","message","finally","handleOpenModal","srcBigImg","tagsBigImg","handleCloseModal","prevProps","scrollTo","top","documentElement","scrollHeight","behavior","shouldRenderLoadMoreButton","color","height","width","timeout","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b4a21103.chunk.js","sourcesContent":["import axios from 'axios';\r\nconst KEY = '12950140-ac580548e8e75bad35a7049ea';\r\nconst BASE_URL = 'https://pixabay.com/api/';\r\nconst fetchImg = ({ searchQuery = '', currentPage = 1, perPage }) => {\r\n  return axios\r\n    .get(\r\n      `${BASE_URL}?key=${KEY}&q=${searchQuery}&page=${currentPage}&per_page=${perPage}`,\r\n    )\r\n    .then(response => {\r\n      if (response.data.hits.length === 0) {\r\n        throw new Error('No images were found for your request. Try again');\r\n      }\r\n      return response.data.hits;\r\n    });\r\n};\r\n\r\nexport default fetchImg;\r\n","import { Component } from 'react';\r\nimport ProtoTypes from 'prop-types';\r\n\r\nclass SearchBar extends Component {\r\n  state = {\r\n    search: '',\r\n  };\r\n\r\n  handleChange = event => {\r\n    this.setState({ search: event.currentTarget.value });\r\n  };\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    this.props.onSubmit(this.state.search);\r\n    this.setState({ search: '' });\r\n  };\r\n  render() {\r\n    const { search } = this.state;\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            value={search}\r\n            onChange={this.handleChange}\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nSearchBar.propTypes = {\r\n  onSubmit: ProtoTypes.func.isRequired,\r\n};\r\n\r\nexport default SearchBar;\r\n","import PropTypes from 'prop-types';\r\n\r\nconst ImageGalleryItem = ({ image, onClick }) => (\r\n  <li className=\"ImageGalleryItem\">\r\n    <img\r\n      src={image.smallImg}\r\n      alt={image.tags}\r\n      className=\"ImageGalleryItem-image\"\r\n      onClick={() => onClick(image.bigImg, image.tags)}\r\n    />\r\n  </li>\r\n);\r\n\r\nImageGalleryItem.propTypes = {\r\n  image: PropTypes.shape({\r\n    smallImg: PropTypes.string.isRequired,\r\n    tags: PropTypes.string.isRequired,\r\n  }).isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import ProtoTypes from 'prop-types';\r\nimport ImagesGalleryItem from '../ImageGalleryItem';\r\nconst ImageGallery = ({ images, onModal }) => (\r\n  <ul className=\"ImageGallery\">\r\n    {images.map(image => (\r\n      <ImagesGalleryItem key={image.id} image={image} onClick={onModal} />\r\n    ))}\r\n  </ul>\r\n);\r\nImageGallery.propTypes = {\r\n  images: ProtoTypes.arrayOf(\r\n    ProtoTypes.shape({ id: ProtoTypes.number.isRequired }).isRequired,\r\n  ),\r\n  onModal: ProtoTypes.func.isRequired,\r\n};\r\nexport default ImageGallery;\r\n","import ProtoTypes from 'prop-types';\r\nconst Button = ({ onClick }) => (\r\n  <button type=\"button\" className=\"Button\" onClick={onClick}>\r\n    <span className=\"\">Load more</span>\r\n  </button>\r\n);\r\n\r\nButton.propTypes = {\r\n  onClick: ProtoTypes.func.isRequired,\r\n};\r\nexport default Button;\r\n","import { createPortal } from 'react-dom';\r\nimport { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nclass Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = event => {\r\n    if (event.code === 'Escape') this.props.onClose();\r\n  };\r\n\r\n  handleBackdropClick = event => {\r\n    if (event.target === event.currentTarget) this.props.onClose();\r\n  };\r\n\r\n  render() {\r\n    return createPortal(\r\n      <div className=\"Overlay\" onClick={this.handleBackdropClick}>\r\n        <div className=\"Modal\">\r\n          <img src={this.props.imgModal} alt={this.props.tagsModal} />\r\n        </div>\r\n      </div>,\r\n      modalRoot,\r\n    );\r\n  }\r\n}\r\n\r\nModal.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n  imgModal: PropTypes.string.isRequired,\r\n  tagsModal: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Modal;\r\n","//Moduls\r\nimport { Component } from 'react';\r\nimport imgApi from './services/img-api';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\nimport Loader from 'react-loader-spinner';\r\n\r\n//Components\r\nimport SearchBar from './components/SearchBar';\r\nimport ImageGallery from './components/ImageGallery';\r\nimport Button from './components/Button';\r\nimport Modal from './components/Modal';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    images: [],\r\n    searchQuery: '',\r\n    currentPage: 1,\r\n    perPage: 9,\r\n    isLoading: false,\r\n    error: null,\r\n    showModal: false,\r\n    srcImgModal: '',\r\n    tagsImgModal: null,\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.searchQuery !== this.state.searchQuery) {\r\n      this.fetchImages();\r\n    }\r\n    if (this.state.currentPage > 2) {\r\n      window.scrollTo({\r\n        top: document.documentElement.scrollHeight,\r\n        behavior: 'smooth',\r\n      });\r\n    }\r\n  }\r\n\r\n  onChangeQuery = query => {\r\n    this.setState({\r\n      searchQuery: query,\r\n      currentPage: 1,\r\n      images: [],\r\n      error: null,\r\n    });\r\n  };\r\n\r\n  fetchImages = () => {\r\n    const { searchQuery, perPage, currentPage } = this.state;\r\n    const options = { searchQuery, perPage, currentPage };\r\n    this.setState({ isLoading: true });\r\n    imgApi(options)\r\n      .then(response => {\r\n        const newImages = response.map(img => {\r\n          return {\r\n            id: img.id,\r\n            tags: img.tags,\r\n            smallImg: img.webformatURL,\r\n            bigImg: img.largeImageURL,\r\n          };\r\n        });\r\n\r\n        this.setState(prevState => ({\r\n          images: [...prevState.images, ...newImages],\r\n          currentPage: prevState.currentPage + 1,\r\n        }));\r\n      })\r\n      .catch(error => {\r\n        this.setState({ error: error.message });\r\n      })\r\n      .finally(() => this.setState({ isLoading: false }));\r\n  };\r\n\r\n  handleOpenModal = (srcBigImg, tagsBigImg) => {\r\n    this.setState(({ showModal, srcImgModal, tagsImgModal }) => ({\r\n      showModal: !showModal,\r\n      srcImgModal: srcBigImg,\r\n      tagsImgModal: tagsBigImg,\r\n    }));\r\n  };\r\n\r\n  handleCloseModal = () => {\r\n    this.setState(({ showModal }) => ({ showModal: !showModal }));\r\n  };\r\n  render() {\r\n    const {\r\n      images,\r\n      isLoading,\r\n      error,\r\n      showModal,\r\n      srcImgModal,\r\n      tagsImgModal,\r\n    } = this.state;\r\n    const shouldRenderLoadMoreButton = images.length > 0 && !isLoading;\r\n    return (\r\n      <>\r\n        <SearchBar onSubmit={this.onChangeQuery} />\r\n        {error && <h1 className=\"Error\">{error}</h1>}\r\n        <ImageGallery images={images} onModal={this.handleOpenModal} />\r\n        {isLoading && (\r\n          <Loader\r\n            type=\"Circles\"\r\n            color=\"#3f51b5\"\r\n            height={200}\r\n            width={200}\r\n            timeout={3000}\r\n            className=\"Loader\"\r\n          />\r\n        )}\r\n        {shouldRenderLoadMoreButton && <Button onClick={this.fetchImages} />}\r\n        {showModal && (\r\n          <Modal\r\n            imgModal={srcImgModal}\r\n            tagsModal={tagsImgModal}\r\n            onClose={this.handleCloseModal}\r\n          />\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport './styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}